# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html

raw_data:
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/01_raw/ticker_data.csv
  load_args:
    parse_dates:
      - date
    dtype:
      symbol: string
      volume: int

last_ingestion_date:
  type: pickle.PickleDataset
  filepath: data/00_metadata/last_ingestion_date.pkl

feature_store_versions:
  type: kedro_datasets.json.JSONDataset
  filepath: data/00_metadata/feature_store_versions.json

reporting_tests:
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/08_reporting/data_tests.csv

preprocessed_data:
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/02_intermediate/stock_preprocessed.csv
  load_args:
    parse_dates:
      - date

X_train:
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/03_primary/X_train.csv
  load_args:
    parse_dates:
      - date

X_test:
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/03_primary/X_test.csv
  load_args:
    parse_dates:
      - date
      
y_train:
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/03_primary/y_train.csv
  load_args:
    parse_dates:
      - date
      
y_test:
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/03_primary/y_test.csv
  load_args:
    parse_dates:
      - date